# ------------------------------------------------------------------------------------------------------------------------
# Pipeline Steps Template -- steps to download a TF plan artifact from another pipeline
# ------------------------------------------------------------------------------------------------------------------------
parameters:
  - name: pipelineResourceIdentifier
    default: ''

steps:
- download: ${{ parameters.pipelineResourceIdentifier }}
  displayName: Download Artifact Files

- task: CmdLine@2
  inputs:
    script: |
      echo "Build Artifact Name: ${{ parameters.pipelineResourceIdentifier }}"
      echo "pipelineResourcePath: $(pipelineResourcePath)"
      echo "pipelineResourceDropPath: $(pipelineResourceDropPath)"
      echo "projectID: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.projectID)"
      echo "pipelineName: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.pipelineName)"
      echo "pipelineID: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.pipelineID)"
      echo "runName: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.runName)"
      echo "runID: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.runID)"
      echo "runURI: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.runURI)"
      echo "sourceBranch: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.sourceBranch)"
      echo "sourceCommit: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.sourceCommit)"
      echo "sourceProvider: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.sourceProvider)"
      echo "requestedFor: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.requestedFor)"
      echo "requestedForID: $(resources.pipeline.${{ parameters.pipelineResourceIdentifier }}.requestedForID)"
      echo "----------------------------------------"
      echo "##[group]Display All Environment Variables:"
      printenv | sort
      echo "##[endgroup]"
      echo "----------------------------------------"
      echo "##[group]Directory of $(pipelineResourceDropPath):"
      ls $(pipelineResourceDropPath) -al
      tree -L 4 $(pipelineResourceDropPath)
      echo "##[endgroup]"
  displayName: 'Display Artifact Info'
  continueOnError: true

- task: CopyFiles@2
  displayName: Copy Artifact Package to Root
  inputs:
    sourceFolder: '$(pipelineResourceDropPath)'
    targetFolder: '$(scriptsWorkingDirectory)'
    overWrite: true
