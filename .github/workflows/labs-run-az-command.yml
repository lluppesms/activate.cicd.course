# ------------------------------------------------------------------------------------------------------------------------
# GHA Workflow to run an az command with or without parameters
# Change the variables in the env section to specify which file and what parameters you want to execute
# ------------------------------------------------------------------------------------------------------------------------
# FYI: You need to set up some secrets before running this workflows - see CreateGitHubSecrets.md for details.
# ------------------------------------------------------------------------------------------------------------------------
name: labs.run.az.command.workflow

## uncomment the "on: push" line if you want the pipeline to run automatically whenever you do a checkin
# on: push
## uncomment the "on: workflow_dispatch" line if you want to run the pipeline manually each time
on: workflow_dispatch
   
# ------------------------------------------------------------------------------------------------------------------------
# Setup
# ------------------------------------------------------------------------------------------------------------------------
jobs:
  run-command:
    name: Run Command
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # Required to request the OIDC JWT Token
      contents: read     # Required when GH token is used to authenticate with private repo
      actions: read      # Required for wlgore/azure-repository-login to read the job id, so that it can be re-run

    # ------------------------------------------------------------------------------------------------------------------------
    # Variables
    # ------------------------------------------------------------------------------------------------------------------------
    env:
      azureRegion: ${{ vars.AZURE_LOCATION }}
      resourceGroupName: ${{ vars.RESOURCEGROUPNAME }}

      templateFileName: '/Labs/bicep/02_Intro/simplest-loganalytics.bicep'
      parameters: ''
      # templateFileName: './Labs/bicep/03_Parameters/loganalytics.bicep'
      # parameters: 'logAnalyticsWorkspaceName=logAnalytics02'

    # ------------------------------------------------------------------------------------------------------------------------
    # Actions
    # ------------------------------------------------------------------------------------------------------------------------
    steps:
      - name: Checkout Code
        uses: actions/checkout@main

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Create Resource Group # not allowed at WLG - use the next section instead
        run: 
          az group create --name ${{ env.resourceGroupName }} --location ${{ env.azureRegion }}

      # - name: Azure login
      #   uses: wlgore/azure-repository-login@v1
      #   id: azure-login
      #   with:
      #     azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}  # this is created by the action - the first time it fails, run again and it works
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}                   # need to set this manually
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}                               # need to set this manually
      #     bot-credentials: ${{ secrets.AZURE_REPOSITORY_LOGIN_BOT_CREDENTIALS }}  # org level creds should exist already
      #     environment: ${{ inputs.environment }}
      #     location: EastUS
      #     use-pretty-names: true

      - name: Execute AZ Deploy without Parms
        if: env.parameters == ''
        id: deploywithoutparms
        shell: pwsh
        run: 
          az deployment group create `
            --resource-group ${{ env.resourceGroupName }}  `
            --template-file ${{ env.templateFileName }}  `

      - name: Execute AZ Deploy with Parms
        if: env.parameters != ''
        id: deploywithparms
        shell: pwsh
        run: 
          az deployment group create `
            --resource-group ${{ env.resourceGroupName }}  `
            --template-file ${{ env.templateFileName }}  `
            --parameters ${{ env.parameters }} 

      - name: List files
        if: always()
        run: 
          tree ${{ env.GITHUB_ACTION_PATH }}
